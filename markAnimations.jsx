{
  function createKeyframes(layer, markers) {
    var timeRemap = layer.property("ADBE Time Remapping");

    // Reset existing keyframes
    while (timeRemap.numKeys > 0) {
      timeRemap.removeKey(1);
    }
    layer.timeRemapEnabled = true;

    // Two keyframes are always generated by turning on time remapping
    // Remove last one
    timeRemap.removeKey(2);

    // Create keyframes for each pair of markers
    var layerInPoint = layer.inPoint;
    for (var i = 1; i <= markers.numKeys; i += 2) {
      var startMarkerTime = markers.keyTime(i);
      var endMarkerTime = markers.keyTime(i + 1);

      timeRemap.setValueAtTime(layerInPoint + startMarkerTime, startMarkerTime);
      timeRemap.setValueAtTime(layerInPoint + endMarkerTime, endMarkerTime);
    }

    // Unless the first marker is at the very beginning of the comp, there will be n+1 keyframes because start is always generated by turning on time remapping
    if (timeRemap.numKeys !== markers.numKeys) {
        timeRemap.removeKey(1);
    }

    // For readability, set the interpolation type to hold on the animation end markers
    for (var i = 2; i <= markers.numKeys; i += 2) {
      timeRemap.setInterpolationTypeAtKey(
        i,
        KeyframeInterpolationType.LINEAR,
        KeyframeInterpolationType.HOLD
      );
    }
  }

  function getSelectedLayerComp() {
    var activeItem = app.project.activeItem;
    if (
      activeItem instanceof CompItem &&
      activeItem.selectedLayers.length === 1
    ) {
      var selectedLayer = activeItem.selectedLayers[0];
      if (selectedLayer.source instanceof CompItem) {
        return selectedLayer.source;
      }
    }
    return null;
  }

  // Main function
  function main() {
    app.beginUndoGroup("Adjust Precomp Timings");

    var precomp = getSelectedLayerComp();
    if (!precomp) {
      alert("No precomp selected.");
      app.endUndoGroup();
      return;
    }

    var markers = precomp.markerProperty;
    if (markers.numKeys < 2 || markers.numKeys % 2 !== 0) {
      alert(
        "The precomp must have at least two markers and an even number of markers."
      );
      return;
    }

    var allComps = app.project.items;
    for (var i = 1; i <= allComps.length; i++) {
      if (allComps[i] instanceof CompItem) {
        var comp = allComps[i];
        for (var j = 1; j <= comp.layers.length; j++) {
          var layer = comp.layers[j];

          if (layer.source !== null && layer.source.name === precomp.name) {
            createKeyframes(layer, precomp.markerProperty);
          }
        }
      }
    }

    app.endUndoGroup();
  }

  main();
}
